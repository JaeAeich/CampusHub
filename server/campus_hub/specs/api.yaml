openapi: 3.0.0
info:
  title: CampusHub
  description: "API documentation for CampusHub"
  version: 0.0.0

servers:
  - url: /campus_hub/v1

tags:
  - name: Authentication
    description: Operations related to user authentication (Register, Login, Forgot Password)
  - name: Services
    description: Operations related to services (Get, Add, Update, Delete)
  - name: Orders
    description: Operations related to orders (Get History, Place Order, Cancel Order)
  - name: Payments
    description: Operations related to payments (Initiate Payment, Verify Payment)
  - name: Notifications
    description: Operations related to notifications (Get, Get by ID)

paths:
  /services:
    get:
      summary: Get a list of all services.
      operationId: get_services
      tags:
        - Services
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '../models/schema/service.yaml#/ServiceList'
        '404':
          description: Not Found
    post:
      summary: Add a new service 
      operationId: post_service
      tags:
        - Services
      requestBody:
        description: Service object to be added
        required: true
        content:
          application/json:
            schema:
              $ref: "../models/schema/service.yaml#/Service"
      responses:
        '405':
          description: Invalid Input.
        '201':
          description: Success
          content:                                       #if we want to get the posted object in response.
            application/json:
              schema:
                $ref: "../models/schema/service.yaml#/Service"  
          
  /services/{service_id}:  
    put:
      summary: Update a service
      operationId: update_service
      tags:
        - Services
      parameters:
        $ref: "../models/schema/service.yaml#/parameters" 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "../models/schema/service.yaml#/Service"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "../models/schema/service.yaml#/Service"
        '404':
          description: Not Found
    
    delete:
      summary: Delete an service
      operationId: delete_service
      tags:
        - Services
      parameters:
        $ref: "../models/schema/service.yaml#/parameters"  
      responses:
        '204':
          description: Success
        '404':
          description: Not Found


  /stores:
    get:
      summary: Get a list of all stores.
      operationId: get_stores
      tags:
        - Stores
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '../models/schema/store.yaml#/StoreList'
        '404':
          description: Not Found
    post:
      summary: Add a new store 
      operationId: post_store
      tags:
        - Stores
      requestBody:
        description: Store object to be added
        required: true
        content:
          application/json:
            schema:
              $ref: "../models/schema/store.yaml#/Store"
      responses:
        '405':
          description: Invalid Input.
        '201':
          description: Success
          content:                                       #if we want to get the posted object in response.
            application/json:
              schema:
                $ref: "../models/schema/store.yaml#/Store"  
          
  /stores/{store_id}:  
    put:
      summary: Update a store
      operationId: update_store
      tags:
        - Stores
      parameters:
        $ref: "../models/schema/store.yaml#/parameters" 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "../models/schema/store.yaml#/Store"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "../models/schema/store.yaml#/Store"
        '404':
          description: Not Found
    
    delete:
      summary: Delete an store
      operationId: delete_store
      tags:
        - Stores
      parameters:
        $ref: "../models/schema/store.yaml#/parameters"  
      responses:
        '204':
          description: Success
        '404':
          description: Not Found

